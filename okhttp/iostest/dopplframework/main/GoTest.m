//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "GoTest.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Okhttp3Call.h"
#include "Okhttp3OkHttpClient.h"
#include "Okhttp3Request.h"
#include "Okhttp3Response.h"
#include "Okhttp3ResponseBody.h"
#include "android/util/Log.h"
#include "javax/net/ssl/SSLContext.h"

@interface GoTest ()

+ (void)logClassWithId:(id)sf;

@end

__attribute__((unused)) static void GoTest_logClassWithId_(id sf);

@implementation GoTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GoTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  GoTest_mainWithNSStringArray_(args);
}

+ (void)heyoWithNSString:(NSString *)url {
  GoTest_heyoWithNSString_(url);
}

+ (void)logClassWithId:(id)sf {
  GoTest_logClassWithId_(sf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 4, 2, -1, -1, -1 },
    { NULL, "V", 0xa, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mainWithNSStringArray:);
  methods[2].selector = @selector(heyoWithNSString:);
  methods[3].selector = @selector(logClassWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "main", "[LNSString;", "LJavaIoIOException;LJavaSecurityNoSuchAlgorithmException;", "heyo", "LNSString;", "logClass", "LNSObject;" };
  static const J2ObjcClassInfo _GoTest = { "GoTest", NULL, ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_GoTest;
}

@end

void GoTest_init(GoTest *self) {
  NSObject_init(self);
}

GoTest *new_GoTest_init() {
  J2OBJC_NEW_IMPL(GoTest, init)
}

GoTest *create_GoTest_init() {
  J2OBJC_CREATE_IMPL(GoTest, init)
}

void GoTest_mainWithNSStringArray_(IOSObjectArray *args) {
  GoTest_initialize();
  GoTest_heyoWithNSString_(@"http://droidcon-server.herokuapp.com/");
}

void GoTest_heyoWithNSString_(NSString *url) {
  GoTest_initialize();
  JavaxNetSslSSLContext *sslDefault = JavaxNetSslSSLContext_getDefault();
  GoTest_logClassWithId_(sslDefault);
  JavaxNetSslSSLContext *sslContext = JavaxNetSslSSLContext_getInstanceWithNSString_(@"TLS");
  GoTest_logClassWithId_(sslContext);
  Okhttp3OkHttpClient *client = create_Okhttp3OkHttpClient_init();
  Okhttp3Request *request = [((Okhttp3Request_Builder *) nil_chk([create_Okhttp3Request_Builder_init() urlWithNSString:url])) build];
  Okhttp3Response *response = [((id<Okhttp3Call>) nil_chk([client newCallWithOkhttp3Request:request])) execute];
  NSString *s = [((Okhttp3ResponseBody *) nil_chk([((Okhttp3Response *) nil_chk(response)) body])) string];
  AndroidUtilLog_wWithNSString_withNSString_([GoTest_class_() getSimpleName], s);
}

void GoTest_logClassWithId_(id sf) {
  GoTest_initialize();
  AndroidUtilLog_wWithNSString_withNSString_([GoTest_class_() getSimpleName], JreStrcat("$$", @"type: ", [[nil_chk(sf) java_getClass] getName]));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GoTest)
